x- Welcome Message  - As a customer, I would like to see a welcome message when I start the
    application, so that I feel welcome and know that Biblioteca is available.
x- List Books - As a customer, after the welcome message appears
    I would like to see a list of all library books, so that
    I can browse for books I might want to check-out.
    Assume that there is a pre-existing list of books.
    You don't need to support adding or removing books from the library.
x- Book Details - As a customer, I'd like the list of all books to include
    each books Author and Year Published, so that I can be confident
    that I have found the book I am looking for. The book listing should
    have columns for this information.
    x-has 3columns
    x-prints 3 columns
x- Main Menu  - As a customer, instead of automatically seeing the book list,
    I would like to see a list of options and be able to choose one. For now,
    the only option should be 'List Books'. All future options should be added
    to this menu also.
    x print "List Books"
    x if types "1" -> execute list books
- Invalid Menu Option - As a customer, I would like to be notified when I
    choose an invalid option with the message “Select a valid option!”,
    so that I can know when I need to re-enter my choice.
    x- return msg when not correct option
    x- move forward when is correct option
- Quit - As a customer, I would like to continue choosing options until I
    choose to 'Quit'.
    x-menu should display "quit" option
    X-first select quit in initial menu, should quit
    X-second select quit after selecting list books (can choose 1 or 2 at every point)
- Checkout Book - As a librarian, I would like customers to be able to
    check-out a book. Checked out books should not appear in the list
    of all library books.
    x-should be asked to checkout book
    x-customers_books should exist
    x-cusbk should be added from book list
        x-add to cusbk
        x-delete from booklist
    x-cusbk not contain any in bookList
x- Successful Checkout - As a customer, I would like to know that a book
    has been checked out by seeing the message “Thank you! Enjoy the book”.
x- Unsuccessful Checkout - As a customer, I would like to be notified if the
    book I tried to check-out is not available by seeing the message, “That
    book is not available.”, so that I know that I need to select a
    different book or fix my spelling error.
- Return Book - As a librarian, I would like customers to be able to return
    a book, so that other customers can check that book out. Returned books
    should appear in the list of library books.
    x- should say "return books in main menu"
    x- should click to enter, and display list of checked books
    x- method should remove book from cust books
    x- method should add book to bookList
    x- method should reuse menu options from bookMenu
    x- should subsequently print main menu
    x- (below) good click -> good msg
    x- bad operation -> bad msg
x- Successful Return - As a customer, I would like to be notified if the
    book I am returning belongs to this library by seeing the message,
    “Thank you for returning the book.”, so that I know I returned the
    book to the right library.
x- Unsuccessful Return - As a customer, I would like to be notified if the
    book I am returning has not been added to this library by seeing the
    message, “That is not a valid book to return.”, so that I can return
    it to the correct library or fix my spelling error.

List Movies - As a customer, I would like to see a list of available movies, so that I can browse for a
            movie that I might check-out. Movies have a name, year, director and movie rating
            (from 1-10 or unrated).\
            x- create movie class
            x-list "display movies"

Check-out Movie x- As a customer, I would like to check out a movie from the library, so I can enjoy it at home.

User Accounts - Login - As a librarian, I want to know who has checked out a book, so that I can hold them
                accountable for returning it. Users must now login using their library number (which is in the format xxx-xxxx)
                and a password in order to check-out and return books. User credentials are predefined, so registering new users
                is not part of this story.

    -create a user class
        x-has a password
        x-has a username
        x-has a login method
        x-accesses current menu
        x-has an array with this users checked out books only. access through this user.
            x-unit test add and remove book.
            x-integration test add and remove book.

    -create librarian class
        x-can see "checked out books" only.
	x- add extra option for librarian (inst var)
	x-add second print option
	x-show different menu

User Accounts - User information - As a customer, I want to be able to see my user information (name, email address and phone
            number), so that I know that the library can contact me. This option should only be available when the customer is
            logged in and should only display that customer’s information.

    this round:
    -selectItemToCheckout (user)

    Issues:
    new
    1. change menu main to be object responsive (dynamic).
    2. biblioteca.booksController. libraryBooks.
    3. if enter wrong book name, transferred back to main menu. Should have another shot at writing book name.
    4. books controller shouldn't be printing main menu.
    5. return menu message, book menu msg etc in one test.
    6. check all method names and refactor.
    7. delete rentals
    8. put all rental lists into private and getters
    9. change ask user and askUserInput
    10. logs in user test does not work
    11. need to test all private methods
    12. a lot of books in user test, try to move up to controller level
    13. checkout lambda functions
	14 findRentalByTitle has book list at the end, move back into 
-change list books/return books to rented/available for all
The for all books option in testing book lists, need to input manually in case there is an error (no, instead check to make sure there is at least one book in list)
-build book.user function and refactor all
-stop librarian from renting books
-when enter wrong book title, don’t go back to prev menu. Stay on current menu
-give little explanation of return books i.e.. “rented by Neil. Halligan


    old
    2. ask for number entry in main menu, and title entry in book menus
    7. bookList should be mocked in test -> ie. adding more books to actual book list shouldnt break tests
    13. mainMenuMessage shows up a lot -> should remove and test once

This loop
Make sure librarian can’t return book
Fix duplicate select menus somehow
Make findUserByName static method
Fix that do … while loop!